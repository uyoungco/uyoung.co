<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hi,uyoung</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://uyoung.co/"/>
  <updated>2018-09-17T09:47:19.202Z</updated>
  <id>https://uyoung.co/</id>
  
  <author>
    <name>uyoung</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018 暴走 yu 人节参展日记</title>
    <link href="https://uyoung.co/baozouyurenjie/"/>
    <id>https://uyoung.co/baozouyurenjie/</id>
    <published>2018-04-13T00:09:43.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<p>暴走 yu 人节是暴走漫画首届互动娱乐展会，作为暴走粉当然不能错过，很早就买了票。</p><p>总体感觉还是很棒的，嘉宾阵容强大，互动很多（还可以跟王尼玛一起上厕所），诚意满满，但不足也很明显，暴走 yu 人节主要内容集中在主舞台的节目表演，但上海新国际博览中心的现场座位远远不够，感觉还是更适合在类似 BML 的举办地梅赛德斯-奔驰文化中心这种地方举办。</p><a id="more"></a><p><img src="https://imgone.uyoung.co/hexo/bz1.jpg" alt=""></p><p>上午去得比较晚，逛了下厂商展台，没看节目，中午暴走家族在主舞台互动了一波，然后就是下午的节目。</p><h3 id="醋醋"><a href="#醋醋" class="headerlink" title="醋醋"></a>醋醋</h3><p>超级可爱，被圈粉了</p><div class="dplayer" id="dplayer-bz-1"></div><script>$(function(){var e=new DPlayer({container:document.getElementById("dplayer-bz-1"),preload:"metadata",video:{url:"https://imgone.uyoung.co/hexo/video/1_baozou.mp4"},danmaku:{id:"diygodme-bz-1",api:"https://api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)})</script><p>&nbsp;</p><div class="dplayer" id="dplayer-bz-2"></div><script>$(function(){var e=new DPlayer({container:document.getElementById("dplayer-bz-2"),preload:"metadata",video:{url:"https://imgone.uyoung.co/hexo/video/2_baozou.mp4"},danmaku:{id:"diygodme-bz-2",api:"https://api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)})</script><h3 id="金馆长"><a href="#金馆长" class="headerlink" title="金馆长"></a>金馆长</h3><p>哦哈哈哈哈哈哈</p><div class="dplayer" id="dplayer-bz-3"></div><script>$(function(){var e=new DPlayer({container:document.getElementById("dplayer-bz-3"),preload:"metadata",video:{url:"https://imgone.uyoung.co/hexo/video/3_baozou.mp4"},danmaku:{id:"diygodme-bz-3",api:"https://api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)})</script><p>&nbsp;</p><div class="dplayer" id="dplayer-bz-4"></div><script>$(function(){var e=new DPlayer({container:document.getElementById("dplayer-bz-4"),preload:"metadata",video:{url:"https://imgone.uyoung.co/hexo/video/4_baozou.mp4"},danmaku:{id:"diygodme-bz-4",api:"https://api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)})</script><h3 id="暴走家族"><a href="#暴走家族" class="headerlink" title="暴走家族"></a>暴走家族</h3><p>全阵容，激动</p><div class="dplayer" id="dplayer-bz-5"></div><script>$(function(){var e=new DPlayer({container:document.getElementById("dplayer-bz-5"),preload:"metadata",video:{url:"https://imgone.uyoung.co/hexo/video/5_baozou.mp4"},danmaku:{id:"diygodme-bz-5",api:"https://api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)})</script><h3 id="咬人猫-赤九玖-有咩酱"><a href="#咬人猫-赤九玖-有咩酱" class="headerlink" title="咬人猫 赤九玖 有咩酱"></a>咬人猫 赤九玖 有咩酱</h3><p>还说什么，舔爆就行了</p><div class="dplayer" id="dplayer-bz-6"></div><script>$(function(){var e=new DPlayer({container:document.getElementById("dplayer-bz-6"),preload:"metadata",video:{url:"https://imgone.uyoung.co/hexo/video/6_baozou.mp4"},danmaku:{id:"diygodme-bz-6",api:"https://api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)})</script><p>&nbsp;</p><div class="dplayer" id="dplayer-bz-7"></div><script>$(function(){var e=new DPlayer({container:document.getElementById("dplayer-bz-7"),preload:"metadata",video:{url:"https://imgone.uyoung.co/hexo/video/7_baozou.mp4"},danmaku:{id:"diygodme-bz-7",api:"https://api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)})</script><p>&nbsp;</p><div class="dplayer" id="dplayer-bz-8"></div><script>$(function(){var e=new DPlayer({container:document.getElementById("dplayer-bz-8"),preload:"metadata",video:{url:"https://imgone.uyoung.co/hexo/video/8_baozou.mp4"},danmaku:{id:"diygodme-bz-8",api:"https://api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)})</script><p>视频视频转载 <a href="https://diygod.me/" target="_blank" rel="noopener">diygod</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;暴走 yu 人节是暴走漫画首届互动娱乐展会，作为暴走粉当然不能错过，很早就买了票。&lt;/p&gt;&lt;p&gt;总体感觉还是很棒的，嘉宾阵容强大，互动很多（还可以跟王尼玛一起上厕所），诚意满满，但不足也很明显，暴走 yu 人节主要内容集中在主舞台的节目表演，但上海新国际博览中心的现场座位远远不够，感觉还是更适合在类似 BML 的举办地梅赛德斯-奔驰文化中心这种地方举办。&lt;/p&gt;
    
    </summary>
    
      <category term="日记本" scheme="https://uyoung.co/categories/%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>rss和IFTTT订阅博客</title>
    <link href="https://uyoung.co/gugujiAndrss/"/>
    <id>https://uyoung.co/gugujiAndrss/</id>
    <published>2018-04-04T10:58:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="先晒一张我的咕咕机"><a href="#先晒一张我的咕咕机" class="headerlink" title="先晒一张我的咕咕机"></a>先晒一张我的咕咕机</h3><p><img src="https://imgone.uyoung.co/hexo/gugu_20180404.jpg" alt="咕咕机"></p><a id="more"></a><h4 id="首先来到IFTTT"><a href="#首先来到IFTTT" class="headerlink" title="首先来到IFTTT"></a>首先来到IFTTT</h4><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;先晒一张我的咕咕机&quot;&gt;&lt;a href=&quot;#先晒一张我的咕咕机&quot; class=&quot;headerlink&quot; title=&quot;先晒一张我的咕咕机&quot;&gt;&lt;/a&gt;先晒一张我的咕咕机&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://imgone.uyoung.co/hexo/gugu_20180404.jpg&quot; alt=&quot;咕咕机&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
      <category term="咕咕机" scheme="https://uyoung.co/tags/%E5%92%95%E5%92%95%E6%9C%BA/"/>
    
      <category term="RSS" scheme="https://uyoung.co/tags/RSS/"/>
    
      <category term="IFTTT" scheme="https://uyoung.co/tags/IFTTT/"/>
    
  </entry>
  
  <entry>
    <title>来上海的日子</title>
    <link href="https://uyoung.co/goShangHairizi/"/>
    <id>https://uyoung.co/goShangHairizi/</id>
    <published>2018-03-13T10:14:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="路程"><a href="#路程" class="headerlink" title="路程"></a>路程</h3><ul><li>刚刚过去新年，初四的晚上我踏上了不能回头的路<br><img src="https://imgone.uyoung.co/hexo/luchneg.jpg" alt="路程"></li><li>然后路上就遇到了大雾，在服务区呆了一晚上。等雾散去才开始继续出发</li></ul><a id="more"></a><h3 id="抵达"><a href="#抵达" class="headerlink" title="抵达"></a>抵达</h3><ul><li><p>在我来到上海第一天 就能和小金金、DIY还有小萌一起吃饭感觉真是太好了<br><img src="https://imgone.uyoung.co/hexo/DW4xxSjU0AAaAVB.jpg" alt="吃饭"><br><img src="https://imgone.uyoung.co/hexo/DW4xqzkUMAA_Suv.jpg" alt="吃饭"></p></li><li><p>我真的非常感谢他们</p></li></ul><h3 id="奔波"><a href="#奔波" class="headerlink" title="奔波"></a>奔波</h3><ul><li>还能为啥，找工作呗。最后在地铁五号线附近找到了一份工作<blockquote><p>地图是我第一面试的外包公司，真的有点坑 还好没去<br><img src="https://imgone.uyoung.co/hexo/DXA4T7VXkAALD29.jpg" alt="奔波"></p></blockquote></li></ul><h3 id="水土不服"><a href="#水土不服" class="headerlink" title="水土不服"></a>水土不服</h3><ul><li>最近一直感冒 还时不时的发烧 药还很贵真的不敢买<br><img src="https://imgone.uyoung.co/hexo/DYGHqv7VwAEqozw.jpg" alt="在上海水土不服的日子"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;路程&quot;&gt;&lt;a href=&quot;#路程&quot; class=&quot;headerlink&quot; title=&quot;路程&quot;&gt;&lt;/a&gt;路程&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;刚刚过去新年，初四的晚上我踏上了不能回头的路&lt;br&gt;&lt;img src=&quot;https://imgone.uyoung.co/hexo/luchneg.jpg&quot; alt=&quot;路程&quot;&gt;&lt;/li&gt;&lt;li&gt;然后路上就遇到了大雾，在服务区呆了一晚上。等雾散去才开始继续出发&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="分享境" scheme="https://uyoung.co/categories/%E5%88%86%E4%BA%AB%E5%A2%83/"/>
    
    
  </entry>
  
  <entry>
    <title>我喜欢的音乐</title>
    <link href="https://uyoung.co/my-favorite-songs/"/>
    <id>https://uyoung.co/my-favorite-songs/</id>
    <published>2018-02-06T17:12:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<div class="aplayer" id="aplayer1"></div><script>$(function(){$.ajax({url:"https://api.i-meto.com/meting/api?server=netease&type=playlist&id=75099864",success:function(e){var a=new APlayer({element:document.getElementById("aplayer1"),showlrc:3,theme:"#ad7a86",listmaxheight:"280px",mode:"random",music:JSON.parse(e)});window.aplayers||(window.aplayers=[]),window.aplayers.push(a)}})})</script><p>&nbsp;</p><p>同步自：<a href="http://music.163.com/#/playlist?id=75099864" target="_blank" rel="noopener">uyoung喜欢的音乐 - 网易云音乐</a><br>自豪地使用 <a href="https://github.com/metowolf/Meting" target="_blank" rel="noopener">Meting</a> 和 <a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">APlayer</a> 构建</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;aplayer&quot; id=&quot;aplayer1&quot;&gt;&lt;/div&gt;&lt;script&gt;$(function(){$.ajax({url:&quot;https://api.i-meto.com/meting/api?server=netease&amp;type=playlist&amp;id
      
    
    </summary>
    
      <category term="分享境" scheme="https://uyoung.co/categories/%E5%88%86%E4%BA%AB%E5%A2%83/"/>
    
    
  </entry>
  
  <entry>
    <title>mp2使用</title>
    <link href="https://uyoung.co/Server-4/"/>
    <id>https://uyoung.co/Server-4/</id>
    <published>2018-02-03T00:59:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mp2使用"><a href="#mp2使用" class="headerlink" title="mp2使用"></a>mp2使用</h3><blockquote><p>权限问题</p></blockquote><a id="more"></a><h4 id="权限问题"><a href="#权限问题" class="headerlink" title="权限问题"></a>权限问题</h4><blockquote><p>current 当前的服务所允运行的文件夹<br>shared 啥子源代码<br>source 日志问题什么的<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 在本地执行</span><br><span class="line"><span class="meta">$</span> pm2 deploy ecosystem.json production setup</span><br><span class="line"><span class="meta">--&gt;</span> Deploying to production environment</span><br><span class="line"><span class="meta">--&gt;</span> on host 服务器的IP</span><br><span class="line">  ○ hook pre-setup</span><br><span class="line">mkdir: cannot create directory ‘/www/website/production’: Permission denied</span><br><span class="line">mkdir: cannot create directory ‘/www/website/production’: Permission denied</span><br><span class="line">mkdir: cannot create directory ‘/www/website/production’: Permission denied</span><br><span class="line"></span><br><span class="line">  setup paths failed</span><br><span class="line"></span><br><span class="line">Deploy failed</span><br><span class="line">// 是由于权限问题 在服务器执行下面</span><br><span class="line"><span class="meta">$</span> sudo chmod 777 website</span><br></pre></td></tr></table></figure><p></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> pm2 deploy ecosystem.json production</span><br><span class="line"><span class="meta">--&gt;</span> Deploying to production environment</span><br><span class="line"><span class="meta">--&gt;</span> on host 118.89.249.88</span><br><span class="line">  ○ deploying origin/master</span><br><span class="line">  ○ executing pre-deploy-local</span><br><span class="line">  ○ hook pre-deploy</span><br><span class="line">  ○ fetching updates</span><br><span class="line">  ○ full fetch</span><br><span class="line">Fetching origin</span><br><span class="line">Warning: Permanently added the ECDSA host key for IP address '116.211.167.14' to the list of known hosts.</span><br><span class="line">  ○ resetting HEAD to origin/master</span><br><span class="line">HEAD is now at 3a5d2c9 Merge branch 'master' of gitee.com:uyang/backend-website</span><br><span class="line">  ○ executing post-deploy `export NODE_ENV=production &amp;&amp; pm2 startOrRestart ecosystem.json --env production`</span><br><span class="line">bash: pm2: command not found</span><br><span class="line"></span><br><span class="line">  post-deploy hook failed</span><br><span class="line"></span><br><span class="line">Deploy failed</span><br><span class="line"></span><br><span class="line">// 出现上方问题是 回到服务器用户目录</span><br><span class="line"><span class="meta">$</span> cd ~</span><br><span class="line"><span class="meta">$</span> vi .bashrc</span><br><span class="line">// 注释掉一下代码</span><br><span class="line">case $- in</span><br><span class="line">    *i*) ;;</span><br><span class="line">      *) return;;</span><br><span class="line">esac</span><br><span class="line">// 执行下面即可</span><br><span class="line"><span class="meta">$</span> source .bashrc</span><br></pre></td></tr></table></figure><h4 id="pm2配置文件"><a href="#pm2配置文件" class="headerlink" title="pm2配置文件"></a>pm2配置文件</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// ecosystem.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"apps"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"名称"</span>,</span><br><span class="line">            <span class="attr">"script"</span>: <span class="string">"启动文件"</span>,</span><br><span class="line">            <span class="attr">"env"</span>: &#123;</span><br><span class="line">                <span class="attr">"COMMON_VARIABLE"</span>: <span class="string">"true"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"env_production"</span>: &#123;</span><br><span class="line">                <span class="attr">"NODE_ENV"</span>:<span class="string">"production"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"deploy"</span>: &#123;</span><br><span class="line">        <span class="attr">"production"</span>: &#123;</span><br><span class="line">            <span class="attr">"user"</span>: <span class="string">"uyoung"</span>,</span><br><span class="line">            <span class="attr">"host"</span>: [<span class="string">"IP"</span>],</span><br><span class="line">            <span class="attr">"port"</span>: <span class="string">"ssh端口"</span>,</span><br><span class="line">            <span class="attr">"ref"</span>: <span class="string">"origin/master"</span>,</span><br><span class="line">            <span class="attr">"repo"</span>: <span class="string">"git@项目地址"</span>,</span><br><span class="line">            <span class="attr">"path"</span>: <span class="string">"/www/recruitapp/production"</span>,</span><br><span class="line">            <span class="attr">"ssh_options"</span>: <span class="string">"StrictHostKeyChecking=no"</span>,</span><br><span class="line">            <span class="attr">"post-deploy"</span>: <span class="string">"npm install &amp;&amp; yarn run build &amp;&amp; pm2 startOrRestart ecosystem.json --env production"</span>,</span><br><span class="line">            <span class="attr">"env"</span>: &#123;</span><br><span class="line">                <span class="attr">"NODE_ENV"</span>: <span class="string">"production"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mp2使用&quot;&gt;&lt;a href=&quot;#mp2使用&quot; class=&quot;headerlink&quot; title=&quot;mp2使用&quot;&gt;&lt;/a&gt;mp2使用&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;权限问题&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
      <category term="ubuntu" scheme="https://uyoung.co/tags/ubuntu/"/>
    
      <category term="服务器" scheme="https://uyoung.co/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="防火墙" scheme="https://uyoung.co/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
      <category term="Linux" scheme="https://uyoung.co/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建Nodejs生产环境</title>
    <link href="https://uyoung.co/Server-3/"/>
    <id>https://uyoung.co/Server-3/</id>
    <published>2018-02-03T00:59:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搭建Nodejs生产环境"><a href="#搭建Nodejs生产环境" class="headerlink" title="搭建Nodejs生产环境"></a>搭建Nodejs生产环境</h3><blockquote><p>安装模块<br>使用mp2管理Nodejs进程<br>安装Nginx<br>MongDB安装+管理权限设置<br>MongDB 数据迁移<br>MongDB 自动备份</p></blockquote><a id="more"></a><h4 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo apt-get install vim openssl build-essential libssl-dev wget curl git</span><br><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ nvm install 8.9.4</span><br><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ nvm use v8.9.4</span><br><span class="line">Now using node v8.9.4 (npm v5.6.0)</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ nvm alias default v8.9.4</span><br><span class="line">default -&gt; v8.9.4</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ node -v</span><br><span class="line">v8.9.4</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ npm --registry=https://registry.npm.taobao.org install -g npm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure><h4 id="使用mp2管理Nodejs进程"><a href="#使用mp2管理Nodejs进程" class="headerlink" title="使用mp2管理Nodejs进程"></a>使用mp2管理Nodejs进程</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pm2 start app.js</span><br><span class="line"></span><br><span class="line">pm2 list</span><br><span class="line"></span><br><span class="line">pm2 show app</span><br><span class="line"></span><br><span class="line">pm2 log</span><br></pre></td></tr></table></figure><h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 服务器可能预装apache  </span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo service apache2 stop</span><br><span class="line"></span><br><span class="line">// 更新包列表</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo apt-get update</span><br><span class="line">//  安装Nginx</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo apt-get install nginx</span><br><span class="line"></span><br><span class="line">// 进入 /etc/nginx/conf.d/ 创建文件 z-uyonug-cn-8081.conf</span><br><span class="line">// sudo nginx -t 检查文件</span><br><span class="line">// 重启 Nginx</span><br><span class="line">uyoung@VM-0-11-ubuntu:/etc/nginx/conf.d$ sudo nginx -s reload</span><br><span class="line">uyoung@VM-0-11-ubuntu:/etc/nginx$ sudo service nginx reload</span><br></pre></td></tr></table></figure><h4 id="MongDB安装-管理权限设置"><a href="#MongDB安装-管理权限设置" class="headerlink" title="MongDB安装+管理权限设置"></a>MongDB安装+管理权限设置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 开启MongoDB</span><br><span class="line">uyoung@VM-0-11-ubuntu:/etc/nginx$ sudo service mongod start</span><br><span class="line">// 停止开启MongoDB</span><br><span class="line">uyoung@VM-0-11-ubuntu:/etc/nginx$ sudo service mongod stop</span><br><span class="line">// 重启</span><br><span class="line">uyoung@VM-0-11-ubuntu:/etc/nginx$ sudo service mongod restart</span><br><span class="line">// 进入mongo命令行</span><br><span class="line"><span class="meta">&gt;</span> use admin //输入</span><br><span class="line">switched to db admin</span><br><span class="line"><span class="meta">&gt;</span> db.createUser(&#123;user:'用户名',pwd:'密码',roles:[&#123;role:'userAdminAnyDatabase',db:'admin'&#125;]&#125;) //创建全局管理员</span><br><span class="line"></span><br><span class="line">Successfully added user: &#123;</span><br><span class="line">"user" : "uyoung",</span><br><span class="line">"roles" : [</span><br><span class="line">&#123;</span><br><span class="line">"role" : "userAdminAnyDatabase",</span><br><span class="line">"db" : "admin"</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">// 为imooc-chat 数据库设置单独读写账户</span><br><span class="line"><span class="meta">&gt;</span> db.createUser(&#123;user:'imooc_chat',pwd:'imooc',roles:[&#123;role:'readWrite',db:'imooc-chat'&#125;]&#125;)</span><br><span class="line"></span><br><span class="line">// 只读账户用于备份程序</span><br><span class="line">db.createUser(&#123;user:'imooc_chat_wheel',pwd:'beifen',roles:[&#123;role:'read',db:'imooc-chat'&#125;]&#125;)</span><br><span class="line"></span><br><span class="line">// 开启验证模式</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo vi /etc/mongod.conf</span><br><span class="line">security:</span><br><span class="line">  authorization: 'enabled'</span><br><span class="line"></span><br><span class="line">// 进入数据库后</span><br><span class="line"><span class="meta">&gt;</span> use admin</span><br><span class="line"><span class="meta">&gt;</span> db.auth('用户名', '密码') //返回1认证成功</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> mongo 127.0.0.1:27017/imooc-chat -u imooc_chat -p imooc</span><br></pre></td></tr></table></figure><h4 id="MongDB-数据迁移"><a href="#MongDB-数据迁移" class="headerlink" title="MongDB 数据迁移"></a>MongDB 数据迁移</h4><h4 id="MongDB-自动备份"><a href="#MongDB-自动备份" class="headerlink" title="MongDB 自动备份"></a>MongDB 自动备份</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//  创建脚本</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ mkdir task</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ mv task tasks</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ cd tasks/</span><br></pre></td></tr></table></figure><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">backUpFolder=/home/uyoung/backup/imooc-chat</span><br><span class="line">date_now=`data +%Y_%m_%d_%H%M`</span><br><span class="line">backFileName=imooc-chat_$date_now</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd backUpFolder</span><br><span class="line">mkdir -p $backFileName</span><br><span class="line"></span><br><span class="line">mongodump -h 127.0.0.1:27017 -d imooc-chat -u imooc_chat_wheel -p beifen -o $backFileName</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar zcvf $backFileName.tar.gz $backFileName</span><br><span class="line"></span><br><span class="line">rm -rf $backFileName</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">$</span> sudo sh ./tasks/imooc-chat.backup.sh</span><br><span class="line">// 为脚本设置定时</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ crontab -e </span><br><span class="line"></span><br><span class="line">// 测试定时命令</span><br><span class="line">13 00 * * * SH /home/uyoung/tasks/imooc-chat.backup.sh</span><br><span class="line"></span><br><span class="line">// 完善定时命令 凌晨4点执行</span><br><span class="line">00 4 * * * SH /home/uyoung/tasks/imooc-chat.backup.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;搭建Nodejs生产环境&quot;&gt;&lt;a href=&quot;#搭建Nodejs生产环境&quot; class=&quot;headerlink&quot; title=&quot;搭建Nodejs生产环境&quot;&gt;&lt;/a&gt;搭建Nodejs生产环境&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;安装模块&lt;br&gt;使用mp2管理Nodejs进程&lt;br&gt;安装Nginx&lt;br&gt;MongDB安装+管理权限设置&lt;br&gt;MongDB 数据迁移&lt;br&gt;MongDB 自动备份&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>服务器防火墙配置</title>
    <link href="https://uyoung.co/Server-2/"/>
    <id>https://uyoung.co/Server-2/</id>
    <published>2018-02-02T23:48:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="服务器防火墙配置"><a href="#服务器防火墙配置" class="headerlink" title="服务器防火墙配置"></a>服务器防火墙配置</h3><blockquote><p>更新系统<br>配置iptables-restore<br>安装fail2ban</p></blockquote><a id="more"></a><h4 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo apt-get update &amp;&amp; sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h4 id="配置iptables-restore"><a href="#配置iptables-restore" class="headerlink" title="配置iptables-restore"></a>配置iptables-restore</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo iptables -F</span><br><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo vi /etc/iptables.up.rules</span><br><span class="line"></span><br><span class="line">*filter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line"></span><br><span class="line">-A OUTPUT -j ACCEPT</span><br><span class="line"></span><br><span class="line">-A INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line">-A INPUT -p tcp -m state --state NEW --dport 39999 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> ping</span><br><span class="line">-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> log denied calls</span><br><span class="line">-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied:" --log-level 7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> drop incoming sensitive connections</span><br><span class="line">-A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --set</span><br><span class="line">-A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --update --seconds 60 --hitcount 150 -j DROP</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> reject all other inbound</span><br><span class="line">-A INPUT -j REJECT</span><br><span class="line">-A FORWARD -j REJECT</span><br><span class="line"></span><br><span class="line">COMMIT</span><br><span class="line"></span><br><span class="line">"/etc/iptables.up.rules" 27L, 459C</span><br><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo vi /etc/iptables.up.rules</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo iptables-restore &lt; /etc/iptables.up.rules</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo ufw status  //查看防火墙有木有启动</span><br><span class="line">Status: inactive</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo ufw enable //激活防火墙</span><br><span class="line">Command may disrupt existing ssh connections. Proceed with operation (y|n)? y</span><br><span class="line">Firewall is active and enabled on system startup</span><br><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo vi /etc/network/if-up.d/iptables  //开启自动启动防火墙</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line">iptables-restore /etc/iptable.up.rules</span><br><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo chmod +x /etc/network/if-up.d/iptables   //给脚本权限</span><br></pre></td></tr></table></figure><h4 id="安装-Fail2Ban-防御模块"><a href="#安装-Fail2Ban-防御模块" class="headerlink" title="安装 Fail2Ban 防御模块"></a>安装 Fail2Ban 防御模块</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$sudo apt-get install fail2ban</span><br><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo service fail2ban status</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo service fail2ban stop //停止</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;服务器防火墙配置&quot;&gt;&lt;a href=&quot;#服务器防火墙配置&quot; class=&quot;headerlink&quot; title=&quot;服务器防火墙配置&quot;&gt;&lt;/a&gt;服务器防火墙配置&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;更新系统&lt;br&gt;配置iptables-restore&lt;br&gt;安装fail2ban&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>服务器添加账户以及秘钥登录</title>
    <link href="https://uyoung.co/Server-1/"/>
    <id>https://uyoung.co/Server-1/</id>
    <published>2018-02-02T22:52:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="服务器添加账户以及秘钥登录"><a href="#服务器添加账户以及秘钥登录" class="headerlink" title="服务器添加账户以及秘钥登录"></a>服务器添加账户以及秘钥登录</h3><blockquote><p>登录服务器<br>创建一个用户<br>实现秘钥自动登录<br>修改默认登录端口22</p></blockquote><a id="more"></a><h4 id="登录服务器"><a href="#登录服务器" class="headerlink" title="登录服务器"></a>登录服务器</h4><blockquote><p>使用SSH命令 用户名@IP 之后输入密码即可登录</p></blockquote><h4 id="创建一个用户"><a href="#创建一个用户" class="headerlink" title="创建一个用户"></a>创建一个用户</h4><blockquote><p>使用 $sudo adduser 用户名<br>提升用户权限 $sudo gpasswd -a 用户名 sudo<br>继续 $sudo visudo 打开后 在 root ALL=(ALL:ALL) ALL 下面增加一行 用户名 ALL=(ALL:ALL) ALL<br>然后按 Ctrl+X 然后Shift+y 回车保存并且退出</p></blockquote><h4 id="实现秘钥自动登录"><a href="#实现秘钥自动登录" class="headerlink" title="实现秘钥自动登录"></a>实现秘钥自动登录</h4><blockquote><p>查看用户目录下是否存在 .ssh 文件以及是否生成过秘钥<br>id_res.pub是公钥 id_res是私钥<br>生成秘钥 $ssh-keygen -t rsa -b 4096 -C “zzyouyang@qq.comm” 一路回车生成<br>$eval “$(ssh-agent -s)” 开启ssh代理<br>ssh-add /c/User/我电脑用户名/.ssh/id_rsa 吧ksy添加到代理<br>回到服务器<br>生成秘钥 $ssh-keygen -t rsa -b 4096 -C “zzyouyang@qq.comm” 一路回车生成<br>$eval “$(ssh-agent -s)” 开启ssh代理<br>ssh-add /c/User/我电脑用户名/.ssh/id_rsa 吧ksy添加到代理<br>创建授权文件<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ ls -a</span><br><span class="line">.  ..  .bash_history  .bash_logout  .bashrc  .cache  .profile  .ssh  .viminfo</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sodu vim  .ssh/authorized_keys</span><br><span class="line">// 进入后  按shift+:   输入wq退出</span><br><span class="line">// 复制本地公钥内容到authorized_keys 这里</span><br><span class="line"></span><br><span class="line">// 授权</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ chmod 600 .ssh/authorized_keys</span><br><span class="line">// 重启SSH服务</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo service ssh restart</span><br></pre></td></tr></table></figure><p></p></blockquote><p><img src="https://imgone.uyoung.co/hexo/sshmiyao.png" alt="实现秘钥自动登录"></p><h4 id="修改默认登录端口22"><a href="#修改默认登录端口22" class="headerlink" title="修改默认登录端口22"></a>修改默认登录端口22</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo vi /etc/ssh/sshd_config</span><br><span class="line">// 修改端口为39999   吧Port 22改为39999</span><br><span class="line">//  以及在最底部添加</span><br><span class="line">AllowUsers 你的用户名</span><br><span class="line"></span><br><span class="line">// 重启SSH服务使修改的端口生效</span><br><span class="line">uyoung@VM-0-11-ubuntu:~$ sudo service ssh restart</span><br><span class="line">// 本地使用 $ssh -p 39999 用户名@IP</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;服务器添加账户以及秘钥登录&quot;&gt;&lt;a href=&quot;#服务器添加账户以及秘钥登录&quot; class=&quot;headerlink&quot; title=&quot;服务器添加账户以及秘钥登录&quot;&gt;&lt;/a&gt;服务器添加账户以及秘钥登录&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;登录服务器&lt;br&gt;创建一个用户&lt;br&gt;实现秘钥自动登录&lt;br&gt;修改默认登录端口22&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>ReactWEB应用-登录注册功能实现</title>
    <link href="https://uyoung.co/ReactWEB-2/"/>
    <id>https://uyoung.co/ReactWEB-2/</id>
    <published>2018-01-01T19:39:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="登录注册功能实现"><a href="#登录注册功能实现" class="headerlink" title="登录注册功能实现"></a>登录注册功能实现</h3><blockquote><p>页面文件结构<br>web开发模式<br>前后端实现</p></blockquote><a id="more"></a><h4 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h4><blockquote><p>骨架结构实现<br>组件放在Component文件下面<br>页面放在Container文件下面（业务组件）<br>页面入口获取用户信息，决定跳转那个页面</p></blockquote><h4 id="开发模式"><a href="#开发模式" class="headerlink" title="开发模式"></a>开发模式</h4><blockquote><p>基于Cookie用户验证<br>express依赖cookie-parser，需要npm install cookie-parser –save安装<br>cookie类似于一张身份卡，登录后服务器返回，你带着cookie就可以访问受限资源<br>页cookie的管理浏览器会自动处理</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;登录注册功能实现&quot;&gt;&lt;a href=&quot;#登录注册功能实现&quot; class=&quot;headerlink&quot; title=&quot;登录注册功能实现&quot;&gt;&lt;/a&gt;登录注册功能实现&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;页面文件结构&lt;br&gt;web开发模式&lt;br&gt;前后端实现&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>ReactWEB应用-前后端联调</title>
    <link href="https://uyoung.co/ReactWEB-1/"/>
    <id>https://uyoung.co/ReactWEB-1/</id>
    <published>2018-01-01T14:31:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前后端联调"><a href="#前后端联调" class="headerlink" title="前后端联调"></a>前后端联调</h3><blockquote><p>使用asios发送异步请求<br>如何发送，端口不一致，使用proxy配置<br>axios拦截器，统一loading处理<br>redux里使用异步数据，渲染页面<br><a id="more"></a></p></blockquote><h4 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h4><blockquote><p>简洁好用的发送请求库，npm install axios –save 安装<br>Axios.interceptors 设置拦截器，比如全局的loading<br>axios.get，.post发送请求，返回promise对象<br>Redux里获取数据，然后dispatch即可</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">axios.get(<span class="string">'/data'</span>).then(<span class="function"><span class="params">res</span>=&gt;</span>res.data).then(<span class="function"><span class="params">cc</span>=&gt;</span><span class="built_in">console</span>.log(cc));</span><br><span class="line">axios.get(<span class="string">'/data'</span>).then(<span class="function"><span class="params">res</span>=&gt;</span><span class="built_in">console</span>.log(res))</span><br><span class="line">axios.get(<span class="string">'/data'</span>).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (res.status === <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">data</span>:res.data[<span class="number">0</span>]&#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Toast &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拦截请求</span></span><br><span class="line">axios.interceptors.request.use(<span class="function"><span class="keyword">function</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  Toast.loading(<span class="string">'加载中'</span>,<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拦截响应</span></span><br><span class="line">axios.interceptors.response.use(<span class="function"><span class="keyword">function</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    Toast.hide()</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前后端联调&quot;&gt;&lt;a href=&quot;#前后端联调&quot; class=&quot;headerlink&quot; title=&quot;前后端联调&quot;&gt;&lt;/a&gt;前后端联调&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;使用asios发送异步请求&lt;br&gt;如何发送，端口不一致，使用proxy配置&lt;br&gt;axios拦截器，统一loading处理&lt;br&gt;redux里使用异步数据，渲染页面&lt;br&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>React学习——4-8</title>
    <link href="https://uyoung.co/ReactStudy%E2%80%94%E2%80%944-8/"/>
    <id>https://uyoung.co/ReactStudy——4-8/</id>
    <published>2017-12-16T13:28:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="React-router4基础知识"><a href="#React-router4基础知识" class="headerlink" title="React-router4基础知识"></a>React-router4基础知识</h3><blockquote><p>React-router4是什么<br>React-router4核心概念<br>React-router4实战</p></blockquote><a id="more"></a><h4 id="React-router4是什么"><a href="#React-router4是什么" class="headerlink" title="React-router4是什么"></a>React-router4是什么</h4><blockquote><p>React官方推荐路由库，4是最新版本<br>4是全新的版本，和之前版本不兼容，浏览器和RN均兼容<br>React开发单页面应用必备，践行路由即组件的概念<br>核心概念：动态路由、Router、Link、Switch</p></blockquote><h5 id="一个简单的栗子"><a href="#一个简单的栗子" class="headerlink" title="一个简单的栗子"></a>一个简单的栗子</h5><blockquote><p>npm install react-router-dom –save<br>Router4使用react-router-dom作为浏览器端的路由<br>忘记Router2的内容，拥抱最新Router4</p></blockquote><h5 id="入门组件"><a href="#入门组件" class="headerlink" title="入门组件"></a>入门组件</h5><blockquote><p>BrowserRouter，包裹整个应用<br>Router 路由对应用渲染的组件，可嵌套<br>Link 跳转专用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">  render()&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.props)</span><br><span class="line">    <span class="keyword">return</span> &lt;h2&gt;测试组件&#123;this.props.match.params.location&#125;&lt;/h2&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">ReactDom.render(</span><br><span class="line">  &lt;Provider store=&#123;store&#125; &gt;</span><br><span class="line">    &lt;BrowserRouter&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;Link to='/'&gt;一营&lt;/Link&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;Link to='/erying'&gt;二营&lt;/Link&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;Link to='/qibinglian'&gt;骑兵连&lt;/Link&gt;&lt;/li&gt;</span><br><span class="line">          &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">          &lt;Route path='/</span><span class="string">' exact component=&#123;App&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">          &lt;Route path='</span>/:location<span class="string">' component=&#123;Test&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/BrowserRouter&gt;</span></span><br><span class="line"><span class="string">  &lt;/Provider&gt;,</span></span><br><span class="line"><span class="string">    document.getElementById('</span>root<span class="string">')</span></span><br><span class="line"><span class="string">)</span></span><br></pre></td></tr></table></figure><h5 id="其他组件"><a href="#其他组件" class="headerlink" title="其他组件"></a>其他组件</h5><blockquote><p>url参数，Route组件参数可用冒号标识参数<br>Redirect组件跳转<br>Switch只渲染一个子Route组件</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ReactDom.render(</span><br><span class="line">  &lt;Provider store=&#123;store&#125; &gt;</span><br><span class="line">    &lt;BrowserRouter&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;Link to='/'&gt;一营&lt;/Link&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;Link to='/erying'&gt;二营&lt;/Link&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;Link to='/qibinglian'&gt;骑兵连&lt;/Link&gt;&lt;/li&gt;</span><br><span class="line">          &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">          &lt;Switch&gt;</span></span><br><span class="line"><span class="regexp">            &#123;/</span>* 只渲染命中的第一个Route *<span class="regexp">/&#125;</span></span><br><span class="line"><span class="regexp">            &lt;Route path='/</span><span class="string">' exact component=&#123;App&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">            &lt;Route path='</span>/erying<span class="string">' component=&#123;Erying&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">            &lt;Route path='</span>/qibinglian<span class="string">' component=&#123;Qibinglian&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">            &lt;Route path='</span>/:location<span class="string">' component=&#123;Test&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">          &lt;/Switch&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/BrowserRouter&gt;</span></span><br><span class="line"><span class="string">  &lt;/Provider&gt;,</span></span><br><span class="line"><span class="string">    document.getElementById('</span>root<span class="string">')</span></span><br><span class="line"><span class="string">)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;React-router4基础知识&quot;&gt;&lt;a href=&quot;#React-router4基础知识&quot; class=&quot;headerlink&quot; title=&quot;React-router4基础知识&quot;&gt;&lt;/a&gt;React-router4基础知识&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;React-router4是什么&lt;br&gt;React-router4核心概念&lt;br&gt;React-router4实战&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>React学习——4-4</title>
    <link href="https://uyoung.co/ReactStudy%E2%80%94%E2%80%944-4/"/>
    <id>https://uyoung.co/ReactStudy——4-4/</id>
    <published>2017-12-14T15:12:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="更近一步"><a href="#更近一步" class="headerlink" title="更近一步"></a>更近一步</h3><blockquote><p>处理异步、调试工具、更优雅的和react结合</p></blockquote><a id="more"></a><blockquote><p>Redux处理异步，需要redux-thunk插件<br>Npm install redux-devtools-extension 并且开启<br>使用react-redux优雅的链接react和redux</p></blockquote><h4 id="处理异步"><a href="#处理异步" class="headerlink" title="处理异步"></a>处理异步</h4><blockquote><p>Redux默认只处理同步，异步任务需要react-thunk插件<br>Npm install redux-thunk –save<br>使用applyMiddleware开启thunk中间件<br>Action可以返回函数，使用dispatch提交action</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDom <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"><span class="keyword">import</span> thunk <span class="keyword">from</span> <span class="string">'redux-thunk'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; counter, addGun,removeGun, addGunAsync &#125; <span class="keyword">from</span> <span class="string">'./index.redux'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = createStore(counter, applyMiddleware(thunk))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  ReactDom.render(</span><br><span class="line">    &lt;App store=&#123;store&#125; addGun=&#123;addGun&#125; addGunAsync=&#123;addGunAsync&#125; removeGun=&#123;removeGun&#125; /&gt;,</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line">render()</span><br><span class="line">store.subscribe(render)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 延迟添加，拖两天再给</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">addGunAsync</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// thunk插件的作用，这里可以返回函数</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">dispatch</span>=&gt;</span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="comment">// 异步结束后，手动执行dispatch</span></span><br><span class="line">      dispatch(addGun())</span><br><span class="line">    &#125;, <span class="number">2000</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调试工具"><a href="#调试工具" class="headerlink" title="调试工具"></a>调试工具</h4><blockquote><p>Chrome 搜索redux 安装<br>新建store的时候判断 window.devToolsExtension<br>使用compose结合thunk和 window.devToolsExtension<br>调试窗口的redux选项卡，实时看到state</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDom <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware, compose &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"><span class="keyword">import</span> thunk <span class="keyword">from</span> <span class="string">'redux-thunk'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; counter, addGun,removeGun, addGunAsync &#125; <span class="keyword">from</span> <span class="string">'./index.redux'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = createStore(counter, compose(</span><br><span class="line">  applyMiddleware(thunk),</span><br><span class="line">  <span class="built_in">window</span>.devToolsExtension ? <span class="built_in">window</span>.devToolsExtension() : <span class="function"><span class="params">f</span>=&gt;</span>f</span><br><span class="line">))</span><br></pre></td></tr></table></figure><h4 id="使用react-redux"><a href="#使用react-redux" class="headerlink" title="使用react-redux"></a>使用react-redux</h4><blockquote><p>npm install react-redux –save<br>忘记subscribe，记住reducer，action和dispatch即可<br>React-redux提供Provider和connect两个接口来链接</p></blockquote><p>Provider组件在应用最外层，传入store即可，只用一次<br>Connect负责从外部获取组件需要的参数<br>Connect可以用装饰器的方式来写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//App.js</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">'react-redux'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;addGun, removeGun, addGunAsync&#125; <span class="keyword">from</span> <span class="string">'./index.redux'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">  <span class="comment">// constructor(props) &#123;</span></span><br><span class="line">  <span class="comment">//   super(props);</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  render()&#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;现在有机枪&#123;<span class="keyword">this</span>.props.num&#125;把&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">        &lt;button onClick=&#123;this.props.addGun&#125;&gt;申请武器&lt;/</span>button&gt;</span><br><span class="line">        &lt;button onClick=&#123;<span class="keyword">this</span>.props.removeGun&#125;&gt;上交武器&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;button onClick=&#123;this.props.addGunAsync&#125;&gt;拖两天给&lt;/</span>button&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">const mapStatetoProps = (state) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">  return &#123;num:state&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">const actionCreators = &#123;addGun, removeGun, addGunAsync&#125;</span></span><br><span class="line"><span class="regexp">App = connect(mapStatetoProps, actionCreators)(App)</span></span><br><span class="line"><span class="regexp">export default App;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDom <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware, compose &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"><span class="keyword">import</span> thunk <span class="keyword">from</span> <span class="string">'redux-thunk'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">'react-redux'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; counter &#125; <span class="keyword">from</span> <span class="string">'./index.redux'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = createStore(counter, compose(</span><br><span class="line">  applyMiddleware(thunk),</span><br><span class="line">  <span class="built_in">window</span>.devToolsExtension ? <span class="built_in">window</span>.devToolsExtension() : <span class="function"><span class="params">f</span>=&gt;</span>f</span><br><span class="line">))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ReactDom.render(</span><br><span class="line">  (&lt;Provider store=&#123;store&#125; &gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/Provider&gt;),</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="使用装饰器优化connect代码"><a href="#使用装饰器优化connect代码" class="headerlink" title="使用装饰器优化connect代码"></a>使用装饰器优化connect代码</h4><blockquote><p>npm run ejct<br>npm install babel-plugin-transform-decorators-legacy插件<br>Package.json 里 babel加上plugins配置</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// package.json</span></span><br><span class="line">  <span class="string">"babel"</span>: &#123;</span><br><span class="line">    <span class="string">"presets"</span>: [</span><br><span class="line">      <span class="string">"react-app"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"plugins"</span>: [</span><br><span class="line">      <span class="string">"transform-decorators-legacy"</span>,</span><br><span class="line">]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><pre><code class="Javascript"><span class="comment">// App.js</span><span class="comment">// const mapStatetoProps = (state) =&gt; {</span><span class="comment">//   return {num:state}</span><span class="comment">// }</span><span class="comment">// const actionCreators = {addGun, removeGun, addGunAsync}</span><span class="comment">// App = connect(mapStatetoProps, actionCreators)(App)</span>@connect(  <span class="comment">//你要state什么属性放到props里</span>  state=&gt;({<span class="attr">num</span>:state}),  <span class="comment">//你要什么方法，放到props里，知道dispatch</span>  {addGun, removeGun, addGunAsync})</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;更近一步&quot;&gt;&lt;a href=&quot;#更近一步&quot; class=&quot;headerlink&quot; title=&quot;更近一步&quot;&gt;&lt;/a&gt;更近一步&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;处理异步、调试工具、更优雅的和react结合&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>React学习——4-1</title>
    <link href="https://uyoung.co/ReactStudy%E2%80%94%E2%80%944-1/"/>
    <id>https://uyoung.co/ReactStudy——4-1/</id>
    <published>2017-12-07T18:41:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Redux-基础知识"><a href="#Redux-基础知识" class="headerlink" title="Redux 基础知识"></a>Redux 基础知识</h3><p>1.Redux是什么<br>2.Redux核心概念<br>3.Redux实战</p><h2><a href="#" class="headerlink"></a><a id="more"></a></h2><h5 id="Redux是什么"><a href="#Redux是什么" class="headerlink" title="Redux是什么"></a>Redux是什么</h5><blockquote><p>专注于状态管理<br>单一状态，单向数据流<br>核心概念：store, state, action, reducer</p></blockquote><h5 id="Redux主要功能"><a href="#Redux主要功能" class="headerlink" title="Redux主要功能"></a>Redux主要功能</h5><blockquote><p>store所有人的状态，在哪里都有记录(state)<br>需要改变的时候，需要告诉专员（dispatch）要干什么(action)<br>处理变化的人(reducer)拿到state和action，生成新的state</p><p>首先通过reducer新建store，随后通过store.getState获取状态<br>需要状态变更，store.dispatch(action)来修改状态<br>Reducer函数接收state和action，返回新的state，可以用store.subscribe监听每次修改</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Redux-基础知识&quot;&gt;&lt;a href=&quot;#Redux-基础知识&quot; class=&quot;headerlink&quot; title=&quot;Redux 基础知识&quot;&gt;&lt;/a&gt;Redux 基础知识&lt;/h3&gt;&lt;p&gt;1.Redux是什么&lt;br&gt;2.Redux核心概念&lt;br&gt;3.Redux实战&lt;/p&gt;&lt;h2&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>React学习——3-7</title>
    <link href="https://uyoung.co/ReactStudy%E2%80%94%E2%80%943-7/"/>
    <id>https://uyoung.co/ReactStudy——3-7/</id>
    <published>2017-12-07T16:40:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="antd-mobile使用"><a href="#antd-mobile使用" class="headerlink" title="antd-mobile使用"></a>antd-mobile使用</h3><h2><a href="#" class="headerlink"></a><a id="more"></a></h2><h5 id="antd-mobile"><a href="#antd-mobile" class="headerlink" title="antd-mobile"></a>antd-mobile</h5><blockquote><p>使用 npm install antd-mobile@next –save 安装最新版</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">组件使用实例：</span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'antd-mobile/dist/antd-mobile.css'</span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(&lt;Button&gt;Start&lt;/Button&gt;, mountNode);</span><br></pre></td></tr></table></figure><h4 id="按需加载"><a href="#按需加载" class="headerlink" title="按需加载"></a>按需加载</h4><blockquote><p>使用 babel-plugin-import（推荐）。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// .babelrc or babel-loader option</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"plugins"</span>: [</span><br><span class="line">    [<span class="string">"import"</span>, &#123; <span class="attr">libraryName</span>: <span class="string">"antd-mobile"</span>, <span class="attr">style</span>: <span class="string">"css"</span> &#125;] <span class="comment">// `style: true` 会加载 less 文件</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后只需从 antd-mobile 引入模块即可，无需单独引入样式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// babel-plugin-import 会帮助你加载 JS 和 CSS</span></span><br><span class="line"><span class="keyword">import</span> &#123; DatePicker &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;antd-mobile使用&quot;&gt;&lt;a href=&quot;#antd-mobile使用&quot; class=&quot;headerlink&quot; title=&quot;antd-mobile使用&quot;&gt;&lt;/a&gt;antd-mobile使用&lt;/h3&gt;&lt;h2&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>React学习——3-1</title>
    <link href="https://uyoung.co/ReactStudy%E2%80%94%E2%80%943-1/"/>
    <id>https://uyoung.co/ReactStudy——3-1/</id>
    <published>2017-12-06T23:55:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="React基础知识"><a href="#React基础知识" class="headerlink" title="React基础知识"></a>React基础知识</h3><p>1.Reacts 是什么<br>2.实用React实现组件化<br>3.React如何进阶实用<br>4.事件<br>5.生命周期</p><a id="more"></a><blockquote><p>更新React<br>npm install –save react@next react-dom@next</p></blockquote><hr><h5 id="组件之间传递数据"><a href="#组件之间传递数据" class="headerlink" title="组件之间传递数据"></a>组件之间传递数据</h5><blockquote><p>组件之间用props传递数据<br>使用&lt;组件 数据=“值” &gt;的形式传递<br>组件里使用this.props获取值<br>如果组件只有 render 函数，还可以用函数的形式写组件</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> boss = <span class="string">'李云龙'</span></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;独立团，&#123;boss&#125;&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">        &lt;YiYing buff='张大喵' /</span>&gt;</span><br><span class="line">        &lt;Qbl buff=<span class="string">'孙德胜'</span> /&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">function Qbl(props)&#123;</span></span><br><span class="line"><span class="regexp">  return &lt;h2&gt;骑兵连连长&#123;props.buff&#125;，冲啊！&lt;/</span>h2&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">YiYing</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> &lt;h2&gt;一营营长，&#123;this.props.buff&#125;&lt;/h2&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App</span><br></pre></td></tr></table></figure><h5 id="组件内部state"><a href="#组件内部state" class="headerlink" title="组件内部state"></a>组件内部state</h5><blockquote><p>组件内部通过state管理状态<br>jsx本质就是js，所以可以直接 数组.map渲染列表<br>Constructor（构造函数） 设置初始状态，记得执行super（props）<br>如State就是一个不可变的对象，使用this.state获取</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">YiYing</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      solders:[<span class="string">'虎子'</span>, <span class="string">'柱子'</span>, <span class="string">'王根生'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;一营营长，&#123;<span class="keyword">this</span>.props.buff&#125;&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">        &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">          &#123;this.state.solders.map((value, key)=&gt;&#123;</span></span><br><span class="line"><span class="regexp">            return &lt;li key=&#123;key&#125;&gt;&#123;key&#125;.&#123;value&#125;&lt;/</span>li&gt;</span><br><span class="line">          &#125;)&#125;</span><br><span class="line">        &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h5><blockquote><p>JSX里，onClick={this.函数名}来绑定事件<br>this引用的问题，需要在构造函数里用bind绑定this<br>this.setState修改state，记得返回新的state，而不是修改</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;button onClick=&#123;()=&gt;<span class="keyword">this</span>.addSolder()&#125;&gt;新兵入伍&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;button onClick=&#123;this.addSolder.bind(this)&#125;&gt;新兵入伍&lt;/</span>button&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.addSolder = <span class="keyword">this</span>.addSolder.bind(<span class="keyword">this</span>)</span><br><span class="line">&lt;button onClick=&#123;<span class="keyword">this</span>.addSolder&#125;&gt;新兵入伍&lt;<span class="regexp">/button&gt;</span></span><br></pre></td></tr></table></figure><h5 id="React生命周期"><a href="#React生命周期" class="headerlink" title="React生命周期"></a>React生命周期</h5><blockquote><p>React组件有若干钩子函数，在组件不同的状态执行<br>初始化周期<br>组件重新渲染生命周期<br>组件卸载生命周期</p></blockquote><p><img src="https://imgone.uyoung.co/hexo/Reactlifecycle.jpg" alt="React生命周期"></p><p><img src="https://imgone.uyoung.co/hexo/Reactlifecycle-1.jpg" alt="React生命周期"><br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">YiYing</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      solders:[<span class="string">'虎子'</span>, <span class="string">'柱子'</span>, <span class="string">'王根生'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'组件马上渲染'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  componentDidMount()&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'组件加载完毕'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  render() &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'组件正在加载'</span>)</span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&#123;<span class="keyword">this</span>.state.solders.map(<span class="function">(<span class="params">value, key</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="keyword">return</span> &lt;li key=&#123;key&#125;&gt;&#123;key&#125;.&#123;value&#125;&lt;/li&gt;</span><br><span class="line">&#125;)&#125;</span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;React基础知识&quot;&gt;&lt;a href=&quot;#React基础知识&quot; class=&quot;headerlink&quot; title=&quot;React基础知识&quot;&gt;&lt;/a&gt;React基础知识&lt;/h3&gt;&lt;p&gt;1.Reacts 是什么&lt;br&gt;2.实用React实现组件化&lt;br&gt;3.React如何进阶实用&lt;br&gt;4.事件&lt;br&gt;5.生命周期&lt;/p&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>React学习——2-3</title>
    <link href="https://uyoung.co/ReactStudy%E2%80%94%E2%80%942-3/"/>
    <id>https://uyoung.co/ReactStudy——2-3/</id>
    <published>2017-12-06T23:52:53.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Express-mongodb-开发web后台接口"><a href="#Express-mongodb-开发web后台接口" class="headerlink" title="Express + mongodb 开发web后台接口"></a>Express + mongodb 开发web后台接口</h3><p>1.Express 开发web接口<br>2.非关系型数据库mongodb<br>3.使用nodejs的mongoose模块链接和操作mongodb</p><a id="more"></a><h5 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h5><blockquote><p>基于nodejs，快速、开发极简的web开发框架<br>npm install express -save 安装express<br>hello world 应用<br>监听路由和响应内容，使用nodemon自动重启 npm install -g nodemon<br>其他的特性<br>app.get、app.post分别开发get和post接口<br>app.use使用模块<br>代res.send（返回文本）、res.json（返回json）、res.sendfile（返回文件）响应不同的内容</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  res.send(<span class="string">'&lt;h1&gt;Hello word&lt;/h1&gt;'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  res.json(&#123;<span class="attr">name</span>: <span class="string">'imooc'</span>, <span class="attr">type</span>: <span class="string">'IT'</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">9093</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Node app start at port 9093'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>node server/server.js  //启动node server<br>nodemon erver/server.js  //启动node server</p><h5 id="mongodb-mongoose"><a href="#mongodb-mongoose" class="headerlink" title="mongodb + mongoose"></a>mongodb + mongoose</h5><blockquote><p>非关系型数据库<br>官网。。。。。。<br>下载、安装<br>mongoos安装 npm install mongoose -save<br>通过mongoose操作mongodb，存储的就是json，相对mysql来说要易用很多<br>Connect链接数据库<br>定义文档模型，Schema和mode新建模型</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//链接mongo 并且使用imooc这个集合</span></span><br><span class="line"><span class="keyword">const</span> DB_URL = <span class="string">'mongodb://127.0.0.1:27017/imooc'</span></span><br><span class="line">mongoose.connect(DB_URL)</span><br><span class="line">mongoose.connection.on(<span class="string">'connected'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'mongo connect success'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//类似于mysql的表 mongo里有文档、字段的概念</span></span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">'user'</span>, <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  user:&#123;<span class="attr">type</span>:<span class="built_in">String</span>, <span class="attr">require</span>:<span class="literal">true</span>&#125;,</span><br><span class="line">  age:&#123;<span class="attr">type</span>:<span class="built_in">Number</span>, <span class="attr">require</span>:<span class="literal">true</span>&#125;</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><blockquote><p>String、Number 等数据结构<br>定create、remove、update分别用来增、删、改的操作<br>Find和findOne用来查询数据<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> 新增一个用户信息</span><br><span class="line">User.create(&#123;</span><br><span class="line">  user:<span class="string">'xiaoming'</span>,</span><br><span class="line">  age:<span class="number">15</span></span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err, doc</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(doc)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">  删除agr=<span class="number">18</span>的对象</span><br><span class="line">User.remove(&#123;<span class="attr">age</span>:<span class="number">18</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err, doc</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'delete success'</span>)</span><br><span class="line">    User.find(&#123;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">e, d</span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(d)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">更新</span><br><span class="line">User.update(&#123;<span class="string">'user'</span>:<span class="string">'xiaoming'</span>&#125;,&#123;<span class="string">'$set'</span>:&#123;<span class="attr">age</span>:<span class="number">26</span>&#125;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, doc</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(doc)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  User.find(&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err,doc</span>)</span>&#123;</span><br><span class="line">    res.json(doc)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p></p></blockquote><p>mongod –dbpath F:\MongoDBData  //启动mongodb</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Express-mongodb-开发web后台接口&quot;&gt;&lt;a href=&quot;#Express-mongodb-开发web后台接口&quot; class=&quot;headerlink&quot; title=&quot;Express + mongodb 开发web后台接口&quot;&gt;&lt;/a&gt;Express + mongodb 开发web后台接口&lt;/h3&gt;&lt;p&gt;1.Express 开发web接口&lt;br&gt;2.非关系型数据库mongodb&lt;br&gt;3.使用nodejs的mongoose模块链接和操作mongodb&lt;/p&gt;
    
    </summary>
    
      <category term="学习册" scheme="https://uyoung.co/categories/%E5%AD%A6%E4%B9%A0%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>离别，第一份工作</title>
    <link href="https://uyoung.co/libie-xindongfang/"/>
    <id>https://uyoung.co/libie-xindongfang/</id>
    <published>2017-09-28T23:52:53.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>离别只是新的开始</p></blockquote><a id="more"></a><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><pre><code>三月用坏了单位两台电脑，导致我心态崩溃。之后写述职报告的时候，我的所有资料平均分布在三台电脑两台坏的，我要是想取回资料就要把两台坏的硬盘拆掉，我资料转移到新的电脑上。我工作打开PS各种切图崩溃，打开PS后我都敢开很多浏览器。</code></pre><p>​ 再见，离别只是新的开始</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;离别只是新的开始&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="事件簿" scheme="https://uyoung.co/categories/%E4%BA%8B%E4%BB%B6%E7%B0%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://uyoung.co/hello-world/"/>
    <id>https://uyoung.co/hello-world/</id>
    <published>2017-09-27T20:28:00.000Z</published>
    <updated>2018-09-17T09:47:19.202Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
